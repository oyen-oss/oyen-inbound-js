/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable max-classes-per-file */
/**
 * This file was auto generated by @block65/openapi-codegen
 *
 * WARN: Do not edit directly.
 *
 * Generated on 2024-08-19T05:17:33.445Z
 *
 */
/** eslint-disable max-classes */
import { Command } from '@block65/rest-client';
import type {
  AcceptTeamInvitationCommandBody,
  AcceptTeamInvitationCommandInput,
  CreateEventSourceCommandBody,
  CreateEventSourceCommandInput,
  CreateInboxCommandBody,
  CreateInboxCommandInput,
  CreateKeyCommandBody,
  CreateKeyCommandInput,
  CreateMessageCommandBody,
  CreateMessageCommandInput,
  CreateTeamCommandBody,
  CreateTeamCommandInput,
  CreateTeamInvitationCommandBody,
  CreateTeamInvitationCommandInput,
  CreateTokenCommandBody,
  CreateTokenCommandInput,
  DeleteEventSourceCommandBody,
  DeleteEventSourceCommandInput,
  DeleteMessageCommandBody,
  DeleteMessageCommandInput,
  DeleteTeamInvitationCommandBody,
  DeleteTeamInvitationCommandInput,
  DeleteTokenCommandBody,
  DeleteTokenCommandInput,
  EmailInbox,
  EmailInboxList,
  EventSource,
  EventSources,
  GetDomainInboxCommandBody,
  GetDomainInboxCommandInput,
  GetEventSourceCommandBody,
  GetEventSourceCommandInput,
  GetInboxCommandBody,
  GetInboxCommandInput,
  GetInboxEventSourceCommandBody,
  GetInboxEventSourceCommandInput,
  GetKeyCommandBody,
  GetKeyCommandInput,
  GetMemberTeamCommandBody,
  GetMemberTeamCommandInput,
  GetMessageCommandBody,
  GetMessageCommandInput,
  GetNumberInboxCommandBody,
  GetNumberInboxCommandInput,
  GetPaymentDetailsCommandBody,
  GetPaymentDetailsCommandInput,
  GetTeamCommandBody,
  GetTeamCommandInput,
  GetTokenCommandBody,
  GetTokenCommandInput,
  GetUserSettingsCommandBody,
  GetUserSettingsCommandInput,
  Inbox,
  InboxEventSource,
  InboxList,
  Key,
  Keys,
  ListDomainInboxesCommandBody,
  ListDomainInboxesCommandInput,
  ListEventSourcesCommandBody,
  ListEventSourcesCommandInput,
  ListInboxesCommandBody,
  ListInboxesCommandInput,
  ListKeysCommandBody,
  ListKeysCommandInput,
  ListMemberTeamsCommandBody,
  ListMemberTeamsCommandInput,
  ListMessagesCommandBody,
  ListMessagesCommandInput,
  ListQuotasCommandBody,
  ListQuotasCommandInput,
  ListTeamInvitationsCommandBody,
  ListTeamInvitationsCommandInput,
  ListTeamMembersCommandBody,
  ListTeamMembersCommandInput,
  ListTeamsCommandBody,
  ListTokensCommandBody,
  ListTokensCommandInput,
  MemberTeam,
  MemberTeams,
  Message,
  MessagesList,
  PaymentDetails,
  Quota,
  Quotas,
  SmsInbox,
  Team,
  TeamInvitation,
  TeamInvitations,
  TeamMember,
  TeamMembers,
  Teams,
  Token,
  TokenWithJwt,
  Tokens,
  UpdateEventSourceCommandBody,
  UpdateEventSourceCommandInput,
  UpdateInboxCommandBody,
  UpdateInboxCommandInput,
  UpdateKeyCommandBody,
  UpdateKeyCommandInput,
  UpdateTeamCommandBody,
  UpdateTeamCommandInput,
  UpdateTeamNameCommandBody,
  UpdateTeamNameCommandInput,
  UpdateTokenCommandBody,
  UpdateTokenCommandInput,
  UpdateUserSettingsCommandBody,
  UpdateUserSettingsCommandInput,
  UseQuotaCommandBody,
  UseQuotaCommandInput,
  UserSettings,
} from './types.js';

/**
 * CreateTeamCommand
 *
 */
export class CreateTeamCommand extends Command<
  CreateTeamCommandInput,
  Team,
  CreateTeamCommandBody
> {
  public override method = 'post' as const;

  constructor(input: CreateTeamCommandInput) {
    const body = input;
    super('/teams', body);
  }
}

/**
 * ListTeamsCommand
 *
 */
export class ListTeamsCommand extends Command<
  never,
  Teams,
  ListTeamsCommandBody
> {
  public override method = 'get' as const;

  constructor() {
    // no input parameters
    super('/teams');
  }
}

/**
 * GetTeamCommand
 *
 */
export class GetTeamCommand extends Command<
  GetTeamCommandInput,
  Team,
  GetTeamCommandBody
> {
  public override method = 'get' as const;

  constructor(input: GetTeamCommandInput) {
    const { teamId } = input;
    super(`/teams/${teamId}`);
  }
}

/**
 * UpdateTeamCommand
 *
 */
export class UpdateTeamCommand extends Command<
  UpdateTeamCommandInput,
  Team,
  UpdateTeamCommandBody
> {
  public override method = 'put' as const;

  constructor(input: UpdateTeamCommandInput) {
    const { teamId, ...body } = input;
    super(`/teams/${teamId}`, body);
  }
}

/**
 * UpdateTeamNameCommand
 *
 */
export class UpdateTeamNameCommand extends Command<
  UpdateTeamNameCommandInput,
  Team,
  UpdateTeamNameCommandBody
> {
  public override method = 'put' as const;

  constructor(input: UpdateTeamNameCommandInput) {
    const { teamId, ...body } = input;
    super(`/teams/${teamId}/name`, body);
  }
}

/**
 * ListTeamMembersCommand
 *
 */
export class ListTeamMembersCommand extends Command<
  ListTeamMembersCommandInput,
  TeamMembers,
  ListTeamMembersCommandBody
> {
  public override method = 'get' as const;

  constructor(input: ListTeamMembersCommandInput) {
    const { teamId } = input;
    super(`/teams/${teamId}/members`);
  }
}

/**
 * ListTeamInvitationsCommand
 *
 */
export class ListTeamInvitationsCommand extends Command<
  ListTeamInvitationsCommandInput,
  TeamInvitations,
  ListTeamInvitationsCommandBody
> {
  public override method = 'get' as const;

  constructor(input: ListTeamInvitationsCommandInput) {
    const { teamId } = input;
    super(`/teams/${teamId}/invitations`);
  }
}

/**
 * CreateTeamInvitationCommand
 *
 */
export class CreateTeamInvitationCommand extends Command<
  CreateTeamInvitationCommandInput,
  TeamInvitation,
  CreateTeamInvitationCommandBody
> {
  public override method = 'post' as const;

  constructor(input: CreateTeamInvitationCommandInput) {
    const { teamId, ...body } = input;
    super(`/teams/${teamId}/invitations`, body);
  }
}

/**
 * DeleteTeamInvitationCommand
 *
 */
export class DeleteTeamInvitationCommand extends Command<
  DeleteTeamInvitationCommandInput,
  never,
  DeleteTeamInvitationCommandBody
> {
  public override method = 'delete' as const;

  constructor(input: DeleteTeamInvitationCommandInput) {
    const { teamId, invitationId } = input;
    super(`/teams/${teamId}/invitations/${invitationId}`);
  }
}

/**
 * AcceptTeamInvitationCommand
 *
 */
export class AcceptTeamInvitationCommand extends Command<
  AcceptTeamInvitationCommandInput,
  TeamMember,
  AcceptTeamInvitationCommandBody
> {
  public override method = 'post' as const;

  constructor(input: AcceptTeamInvitationCommandInput) {
    const { teamId, invitationId, ...body } = input;
    super(`/teams/${teamId}/invitations/${invitationId}/accept`, body);
  }
}

/**
 * ListInboxesCommand
 *
 */
export class ListInboxesCommand extends Command<
  ListInboxesCommandInput,
  InboxList,
  ListInboxesCommandBody
> {
  public override method = 'get' as const;

  constructor(input: ListInboxesCommandInput) {
    const { teamId } = input;
    super(`/teams/${teamId}/inboxes`);
  }
}

/**
 * CreateInboxCommand
 *
 */
export class CreateInboxCommand extends Command<
  CreateInboxCommandInput,
  Inbox,
  CreateInboxCommandBody
> {
  public override method = 'post' as const;

  constructor(input: CreateInboxCommandInput) {
    const { teamId, ...body } = input;
    super(`/teams/${teamId}/inboxes`, body);
  }
}

/**
 * GetInboxCommand
 *
 */
export class GetInboxCommand extends Command<
  GetInboxCommandInput,
  Inbox,
  GetInboxCommandBody
> {
  public override method = 'get' as const;

  constructor(input: GetInboxCommandInput) {
    const { teamId, inboxId } = input;
    super(`/teams/${teamId}/inboxes/${inboxId}`);
  }
}

/**
 * UpdateInboxCommand
 *
 */
export class UpdateInboxCommand extends Command<
  UpdateInboxCommandInput,
  Inbox,
  UpdateInboxCommandBody
> {
  public override method = 'put' as const;

  constructor(input: UpdateInboxCommandInput) {
    const { teamId, inboxId, ...body } = input;
    super(`/teams/${teamId}/inboxes/${inboxId}`, body);
  }
}

/**
 * ListKeysCommand
 *
 */
export class ListKeysCommand extends Command<
  ListKeysCommandInput,
  Keys,
  ListKeysCommandBody
> {
  public override method = 'get' as const;

  constructor(input: ListKeysCommandInput) {
    const { teamId } = input;
    super(`/teams/${teamId}/keys`);
  }
}

/**
 * CreateKeyCommand
 *
 */
export class CreateKeyCommand extends Command<
  CreateKeyCommandInput,
  Key,
  CreateKeyCommandBody
> {
  public override method = 'post' as const;

  constructor(input: CreateKeyCommandInput) {
    const { teamId, ...body } = input;
    super(`/teams/${teamId}/keys`, body);
  }
}

/**
 * GetKeyCommand
 *
 */
export class GetKeyCommand extends Command<
  GetKeyCommandInput,
  Key,
  GetKeyCommandBody
> {
  public override method = 'get' as const;

  constructor(input: GetKeyCommandInput) {
    const { teamId, keyId } = input;
    super(`/teams/${teamId}/keys/${keyId}`);
  }
}

/**
 * UpdateKeyCommand
 *
 */
export class UpdateKeyCommand extends Command<
  UpdateKeyCommandInput,
  Key,
  UpdateKeyCommandBody
> {
  public override method = 'put' as const;

  constructor(input: UpdateKeyCommandInput) {
    const { teamId, keyId, ...body } = input;
    super(`/teams/${teamId}/keys/${keyId}`, body);
  }
}

/**
 * CreateEventSourceCommand
 *
 */
export class CreateEventSourceCommand extends Command<
  CreateEventSourceCommandInput,
  EventSource,
  CreateEventSourceCommandBody
> {
  public override method = 'post' as const;

  constructor(input: CreateEventSourceCommandInput) {
    const { teamId, ...body } = input;
    super(`/teams/${teamId}/eventsources`, body);
  }
}

/**
 * ListEventSourcesCommand
 *
 */
export class ListEventSourcesCommand extends Command<
  ListEventSourcesCommandInput,
  EventSources,
  ListEventSourcesCommandBody
> {
  public override method = 'get' as const;

  constructor(input: ListEventSourcesCommandInput) {
    const { teamId } = input;
    super(`/teams/${teamId}/eventsources`);
  }
}

/**
 * GetEventSourceCommand
 *
 */
export class GetEventSourceCommand extends Command<
  GetEventSourceCommandInput,
  EventSource,
  GetEventSourceCommandBody
> {
  public override method = 'get' as const;

  constructor(input: GetEventSourceCommandInput) {
    const { teamId, eventSourceId } = input;
    super(`/teams/${teamId}/eventsources/${eventSourceId}`);
  }
}

/**
 * UpdateEventSourceCommand
 *
 */
export class UpdateEventSourceCommand extends Command<
  UpdateEventSourceCommandInput,
  EventSource,
  UpdateEventSourceCommandBody
> {
  public override method = 'put' as const;

  constructor(input: UpdateEventSourceCommandInput) {
    const { teamId, eventSourceId, ...body } = input;
    super(`/teams/${teamId}/eventsources/${eventSourceId}`, body);
  }
}

/**
 * DeleteEventSourceCommand
 *
 */
export class DeleteEventSourceCommand extends Command<
  DeleteEventSourceCommandInput,
  never,
  DeleteEventSourceCommandBody
> {
  public override method = 'delete' as const;

  constructor(input: DeleteEventSourceCommandInput) {
    const { teamId, eventSourceId } = input;
    super(`/teams/${teamId}/eventsources/${eventSourceId}`);
  }
}

/**
 * ListQuotasCommand
 *
 */
export class ListQuotasCommand extends Command<
  ListQuotasCommandInput,
  Quotas,
  ListQuotasCommandBody
> {
  public override method = 'get' as const;

  constructor(input: ListQuotasCommandInput) {
    const { teamId } = input;
    super(`/teams/${teamId}/quotas`);
  }
}

/**
 * UseQuotaCommand
 *
 */
export class UseQuotaCommand extends Command<
  UseQuotaCommandInput,
  Quota,
  UseQuotaCommandBody
> {
  public override method = 'put' as const;

  constructor(input: UseQuotaCommandInput) {
    const { teamId, sku, ...body } = input;
    super(`/teams/${teamId}/quotas/${sku}`, body);
  }
}

/**
 * GetPaymentDetailsCommand
 *
 */
export class GetPaymentDetailsCommand extends Command<
  GetPaymentDetailsCommandInput,
  PaymentDetails,
  GetPaymentDetailsCommandBody
> {
  public override method = 'post' as const;

  constructor(input: GetPaymentDetailsCommandInput) {
    const { teamId, ...body } = input;
    super(`/teams/${teamId}/payment`, body);
  }
}

/**
 * GetUserSettingsCommand
 *
 */
export class GetUserSettingsCommand extends Command<
  GetUserSettingsCommandInput,
  UserSettings,
  GetUserSettingsCommandBody
> {
  public override method = 'get' as const;

  constructor(input: GetUserSettingsCommandInput) {
    const { userId } = input;
    super(`/users/${userId}/settings`);
  }
}

/**
 * UpdateUserSettingsCommand
 *
 */
export class UpdateUserSettingsCommand extends Command<
  UpdateUserSettingsCommandInput,
  UserSettings,
  UpdateUserSettingsCommandBody
> {
  public override method = 'post' as const;

  constructor(input: UpdateUserSettingsCommandInput) {
    const { userId, ...body } = input;
    super(`/users/${userId}/settings`, body);
  }
}

/**
 * ListDomainInboxesCommand
 *
 */
export class ListDomainInboxesCommand extends Command<
  ListDomainInboxesCommandInput,
  EmailInboxList,
  ListDomainInboxesCommandBody
> {
  public override method = 'get' as const;

  constructor(input: ListDomainInboxesCommandInput) {
    const { domainName } = input;
    super(`/domains/${domainName}/inboxes`);
  }
}

/**
 * GetDomainInboxCommand
 *
 */
export class GetDomainInboxCommand extends Command<
  GetDomainInboxCommandInput,
  EmailInbox,
  GetDomainInboxCommandBody
> {
  public override method = 'get' as const;

  constructor(input: GetDomainInboxCommandInput) {
    const { domainName, handle } = input;
    super(`/domains/${domainName}/inboxes/${handle}`);
  }
}

/**
 * GetNumberInboxCommand
 *
 */
export class GetNumberInboxCommand extends Command<
  GetNumberInboxCommandInput,
  SmsInbox,
  GetNumberInboxCommandBody
> {
  public override method = 'get' as const;

  constructor(input: GetNumberInboxCommandInput) {
    const { handle } = input;
    super(`/numbers/${handle}`);
  }
}

/**
 * GetInboxEventSourceCommand
 *
 */
export class GetInboxEventSourceCommand extends Command<
  GetInboxEventSourceCommandInput,
  InboxEventSource,
  GetInboxEventSourceCommandBody
> {
  public override method = 'get' as const;

  constructor(input: GetInboxEventSourceCommandInput) {
    const { teamId, inboxId } = input;
    super(`/teams/${teamId}/inboxes/${inboxId}/eventsource`);
  }
}

/**
 * CreateMessageCommand
 *
 */
export class CreateMessageCommand extends Command<
  CreateMessageCommandInput,
  Message,
  CreateMessageCommandBody
> {
  public override method = 'post' as const;

  constructor(input: CreateMessageCommandInput) {
    const { teamId, inboxId, ...body } = input;
    super(`/teams/${teamId}/inboxes/${inboxId}/messages`, body);
  }
}

/**
 * ListMessagesCommand
 *
 */
export class ListMessagesCommand extends Command<
  ListMessagesCommandInput,
  MessagesList,
  ListMessagesCommandBody
> {
  public override method = 'get' as const;

  constructor(input: ListMessagesCommandInput) {
    const { teamId, inboxId } = input;
    super(`/teams/${teamId}/inboxes/${inboxId}/messages`);
  }
}

/**
 * GetMessageCommand
 *
 */
export class GetMessageCommand extends Command<
  GetMessageCommandInput,
  Message,
  GetMessageCommandBody
> {
  public override method = 'get' as const;

  constructor(input: GetMessageCommandInput) {
    const { teamId, inboxId, messageId } = input;
    super(`/teams/${teamId}/inboxes/${inboxId}/messages/${messageId}`);
  }
}

/**
 * DeleteMessageCommand
 *
 */
export class DeleteMessageCommand extends Command<
  DeleteMessageCommandInput,
  never,
  DeleteMessageCommandBody
> {
  public override method = 'delete' as const;

  constructor(input: DeleteMessageCommandInput) {
    const { teamId, inboxId, messageId } = input;
    super(`/teams/${teamId}/inboxes/${inboxId}/messages/${messageId}`);
  }
}

/**
 * ListMemberTeamsCommand
 *
 */
export class ListMemberTeamsCommand extends Command<
  ListMemberTeamsCommandInput,
  MemberTeams,
  ListMemberTeamsCommandBody
> {
  public override method = 'get' as const;

  constructor(input: ListMemberTeamsCommandInput) {
    const { userId } = input;
    super(`/users/${userId}/teams`);
  }
}

/**
 * GetMemberTeamCommand
 *
 */
export class GetMemberTeamCommand extends Command<
  GetMemberTeamCommandInput,
  MemberTeam,
  GetMemberTeamCommandBody
> {
  public override method = 'get' as const;

  constructor(input: GetMemberTeamCommandInput) {
    const { userId, teamId } = input;
    super(`/users/${userId}/teams/${teamId}`);
  }
}

/**
 * CreateTokenCommand
 *
 */
export class CreateTokenCommand extends Command<
  CreateTokenCommandInput,
  TokenWithJwt,
  CreateTokenCommandBody
> {
  public override method = 'post' as const;

  constructor(input: CreateTokenCommandInput) {
    const { userId, ...body } = input;
    super(`/users/${userId}/tokens`, body);
  }
}

/**
 * ListTokensCommand
 *
 */
export class ListTokensCommand extends Command<
  ListTokensCommandInput,
  Tokens,
  ListTokensCommandBody
> {
  public override method = 'get' as const;

  constructor(input: ListTokensCommandInput) {
    const { userId } = input;
    super(`/users/${userId}/tokens`);
  }
}

/**
 * DeleteTokenCommand
 *
 */
export class DeleteTokenCommand extends Command<
  DeleteTokenCommandInput,
  never,
  DeleteTokenCommandBody
> {
  public override method = 'delete' as const;

  constructor(input: DeleteTokenCommandInput) {
    const { userId, tokenId } = input;
    super(`/users/${userId}/tokens/${tokenId}`);
  }
}

/**
 * GetTokenCommand
 *
 */
export class GetTokenCommand extends Command<
  GetTokenCommandInput,
  Token,
  GetTokenCommandBody
> {
  public override method = 'get' as const;

  constructor(input: GetTokenCommandInput) {
    const { userId, tokenId } = input;
    super(`/users/${userId}/tokens/${tokenId}`);
  }
}

/**
 * UpdateTokenCommand
 *
 */
export class UpdateTokenCommand extends Command<
  UpdateTokenCommandInput,
  Token,
  UpdateTokenCommandBody
> {
  public override method = 'put' as const;

  constructor(input: UpdateTokenCommandInput) {
    const { userId, tokenId, ...body } = input;
    super(`/users/${userId}/tokens/${tokenId}`, body);
  }
}
